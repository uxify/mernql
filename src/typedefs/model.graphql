union Model = SectionContent | GenericBox | SliderElement | AnnouncementList | EventList | EventBanner | VideoContent | GenericWithImage | Sidebar

type SectionContent {
  id: ID
  name: String
  sectionContent: [RowSection]
}

type RowSection {
  id: ID
  name: String
  fullWidth: Boolean
  pageSection: Boolean
  bgColor: String
  contentId: [ID]
}

type ColumnSection {
  id: ID
  name: String
  columnContent: Model
}

type SliderElement {
  id: ID
  name: String
  slides: [Slide]
}

type Slide {
  id: ID
  imgUrl: String
  headline1: String
  headline2: String
  textContent: String
  callToAction: String
}

type AnnouncementList {
  id: ID
  name: String
  announcements: [Announcement]
}

type Announcement {
	id: ID
	publishedOn: String
  title: String
	textContent: String
}

type EventBanner {
  id: ID
  name: String
  title: String
  nextEventDate: String
  registrationStatus: String
  eventName: String
  eventLocation: String
	registerButtonLink: String
	participantButtonLink: String
}

type GenericBox {
  id: ID,
  name: String,
  bgImage: String,
  overlayColor: String,
  textColor: String,
  heading1: String,
  heading2: String,
  text: String,
  action: GenericBoxAction
}

type GenericBoxAction {
  type: String,
  image: String,
  text: String,
  link: String
}

type VideoContent {
  id: ID,
  name: String,
  videoLink: String,
  thumbnail: String,
  height: String,
  width: String,
}

type GenericWithImage {
  id: ID,
  name: String,
  bgImage: String,
  overlayColor: String,
  textColor: String,
  heading: String,
  text: String,
  imageList : [ImageLink]
}

type ImageLink {
  image: String,
  link: String
}

type Sidebar {
  id: ID
  name: String
  sidebarContent: [RowSection]
}

type Event {
  id: ID
  eventName: String
  eventLocation: String
  eventDate: String
  description: String
}

type EventList {
  id: ID
  name: String
  events: [Event]
}